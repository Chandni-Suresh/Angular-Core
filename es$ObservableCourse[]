[1mdiff --cc src/app/app.component.ts[m
[1mindex 5a3daa7,bcb867a..0000000[m
[1m--- a/src/app/app.component.ts[m
[1m+++ b/src/app/app.component.ts[m
[36m@@@ -1,50 -1,51 +1,100 @@@[m
[32m++<<<<<<< HEAD[m
[32m +import {AfterViewInit, Component, ElementRef, Inject, InjectionToken, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';[m
[32m +import {COURSES} from '../db-data';[m
[32m++=======[m
[32m+ import {ChangeDetectionStrategy, ChangeDetectorRef, Component, DoCheck, Inject, Injector, OnInit} from '@angular/core';[m
[32m++>>>>>>> master[m
  import {Course} from './model/course';[m
[31m- import {CourseCardComponent} from './course-card/course-card.component';[m
[31m- import {HighlightedDirective} from './directives/highlighted.directive';[m
  import {Observable} from 'rxjs';[m
[32m++<<<<<<< HEAD[m
[32m +import { HttpClient, HttpParams } from '@angular/common/http';[m
[32m +import { CoursesService } from './services/courses.service';[m
[32m++=======[m
[32m+ import {AppConfig, CONFIG_TOKEN} from './config';[m
[32m+ import {COURSES} from '../db-data';[m
[32m+ import {CoursesService} from './courses/courses.service';[m
[32m+ import {createCustomElement} from '@angular/elements';[m
[32m+ import {CourseTitleComponent} from './course-title/course-title.component';[m
[32m+ [m
[32m++>>>>>>> master[m
  [m
[32m +//factory method that created the dependency class[m
[32m +//ALternately instead of useFactory we can use useClass in provider[m
[32m +/* function coursesServiceProvider(httpClient:HttpClient):CoursesService{[m
[32m +  return new CoursesService(httpClient);[m
[32m +}[m
[32m + */[m
[32m +//Unique name of the dependency[m
[32m +//alternately it can use the class name then we dont need this line[m
[32m +// export const COURSES_SERVICE= new InjectionToken<CoursesService>('COURSES_SERVICE');[m
  @Component({[m
[32m++<<<<<<< HEAD[m
[32m +  selector: 'app-root',[m
[32m +  templateUrl: './app.component.html',[m
[32m +  styleUrls: ['./app.component.css'],[m
[32m +  providers:[[m
[32m +    CoursesService,[m
[32m +    ][m
[32m++=======[m
[32m+     selector: 'app-root',[m
[32m+     templateUrl: './app.component.html',[m
[32m+     styleUrls: ['./app.component.css'],[m
[32m++>>>>>>> master[m
  })[m
  export class AppComponent implements OnInit {[m
  [m
[32m+     courses: Course[] = COURSES;[m
[32m+ [m
[32m+     coursesTotal = this.courses.length;[m
[32m+ [m
[32m+     constructor([m
[32m+         private coursesService: CoursesService,[m
[32m+         @Inject(CONFIG_TOKEN) private config: AppConfig,[m
[32m+         private injector: Injector) {[m
[32m+ [m
[32m+     }[m
[32m+ [m
[32m+     ngOnInit() {[m
  [m
[32m+         const htmlElement = createCustomElement(CourseTitleComponent, {injector:this.injector});[m
[32m+ [m
[32m+         customElements.define('course-title', htmlElement);[m
[32m+ [m
[32m++<<<<<<< HEAD[m
[32m +  courses$:Observable<Course[]>[m
[32m +[m
[32m +  constructor( private coursesService:CoursesService) {[m
[32m +    console.log("App Component creating CoursesService instance" , this.coursesService.id);[m
[32m +  }[m
[32m +[m
[32m +  ngOnInit() {[m
[32m +    //Initialisation used for backend service[m
[32m +[m
[32m +   this.courses$=this.coursesService.loadCourses();[m
[32m +    [m
[32m +    [m
[32m +  }[m
[32m +[m
[32m +  save(course:Course){[m
[32m +    this.coursesService.saveCourse(course);[m
[32m +  }[m
[32m +}[m
[32m +[m
[32m++=======[m
[32m+     }[m
[32m+ [m
[32m+     onEditCourse() {[m
[32m+ [m
[32m+             this.courses[1].category = 'ADVANCED';[m
[32m+ [m
[32m+     }[m
[32m+ [m
[32m+     save(course: Course) {[m
[32m+         this.coursesService.saveCourse(course)[m
[32m+             .subscribe([m
[32m+                 () => console.log('Course Saved!')[m
[32m+             );[m
[32m+     }[m
[32m++>>>>>>> master[m
  [m
  [m
[31m -}[m
